# This is a basic workflow to help you get started with Actions

name: Liquibase_CLI_GitHub-Hosted

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "LBCIJob"
  LBCIJob:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a install and run Liquibaes
        run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v${LB_VERSION}/liquibase-${LB_VERSION}.zip --output liquibase-${LB_VERSION}.zip
          unzip -o -d liquibase liquibase-${LB_VERSION}.zip
          ./liquibase/liquibase --version
          ./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties --logLevel="${{ github.event.inputs.logLevel }}" status --verbose
          ./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties --logLevel="${{ github.event.inputs.logLevel }}" updateSQL
          ./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties --logLevel="${{ github.event.inputs.logLevel }}" update
          
          echo "Tags: ${{ github.event.inputs.tags }}" 
          
          # Uncomment the line below to save changes.  Also, see environment variables under "env" and assign variables accordingly
          #git config --global user.email $user.email; git config --global user.name $user.name; git config pull.rebase false; git add .; git commit -m $"message"; git push -u origin $branch
          
          #Uncomment the line below to generate a change log.
          #./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties --changeLogFile=./H2_project/newChangeLog.h2.sql generateChangeLog
          
          #Uncomment the line below to run the rollbackCount 3 times
          #./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties rollbackCount 3
          #./liquibase/liquibase --defaultsFile=./H2_project/liquibase.properties status --verbose
          
          #Uncomment the line below to save changes.  Also, see environment variables under "env" and assign variables accordingly
          #git config --global user.email $user.email; git config --global user.name $user.name; git config pull.rebase false; git add .; git commit -m $"message"; git push -u origin $branch
        env:
            user.email: "amalik@liquibase.com"
            user.name: "amalik"
            message: "<enter commit message>"
            branch: "dev"
            LB_VERSION: "4.10.0"    


